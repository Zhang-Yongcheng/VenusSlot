{"version":3,"sources":["assets\\scripts\\Photon_Interface.js"],"names":["Photon","require","PhotonController","PhotonIf","protocol","address","_ppr","PhotonPeer","prototype","InitCallbackFunction","outsideObj","stcallback","rspcallback","eventcallback","addPeerStatusListener","StatusCodes","connecting","connect","connectFailed","disconnect","timeout","error","connectClosed","addResponseListener","data","jsonstr","JSON","stringify","obj","parse","errCode","vals","console","log","errMsg","addEventListener","test","b","sendData","nCmdId","op","i","push","sendOperation","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["const Photon = require('./Photon-Javascript_SDK');\r\n\r\n/**\r\n@namespace PhotonController\r\n*/\r\n\r\n// prevent globals renaming by closure compilier\r\nvar PhotonController;\r\n(function (PhotonController) {\r\n  /** \r\n     * \r\n     @class \r\n     */\r\n  var PhotonIf = (function () {\r\n    /** \r\n        @constructor\r\n        @param {Photon.ConnectionProtocol} protocol Connection protocol.\r\n        @param {string} address Server address:port.\r\n         */\r\n    function PhotonIf(protocol, address) {\r\n      this._ppr = new Photon.PhotonPeer(protocol, address, '', '');\r\n    } //constructor function end\r\n\r\n    /** \r\n        @設定peer的CallbackFunction\r\n        @param {object} outsideObj The object who own callback function\r\n        @param {Function} stcallback Photonpeer status callback function\r\n        @param {Function} rspcallback Photon server response callback function\r\n        @param {Function} srvevtcallback Photon server event callback function\r\n        */\r\n    PhotonIf.prototype.InitCallbackFunction = function (outsideObj, stcallback, rspcallback, eventcallback) {\r\n      //status callback function\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.connecting, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.connecting, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.connect, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.connect, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.connectFailed, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.connectFailed, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.disconnect, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.disconnect, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.timeout, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.timeout, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.error, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.error, outsideObj);\r\n      });\r\n\r\n      this._ppr.addPeerStatusListener(Photon.PhotonPeer.StatusCodes.connectClosed, function () {\r\n        stcallback(Photon.PhotonPeer.StatusCodes.connectClosed, outsideObj);\r\n      });\r\n\r\n      //reponse callback function\r\n      this._ppr.addResponseListener(1, function (data) {\r\n        var jsonstr = JSON.stringify(data);\r\n        var obj = JSON.parse(jsonstr);\r\n        if (obj.errCode == 0) {\r\n          rspcallback(obj.vals, outsideObj);\r\n        } else {\r\n          //something error\r\n          console.log('errCode:' + obj.errCode + ', errMsg:' + obj.errMsg);\r\n        }\r\n      });\r\n\r\n      //event callback function\r\n      this._ppr.addEventListener(2, function test(b) {\r\n        var jsonstr = JSON.stringify(b);\r\n        var obj = JSON.parse(jsonstr);\r\n        eventcallback(obj.vals, outsideObj);\r\n      });\r\n    };\r\n\r\n    //connect to server\r\n    PhotonIf.prototype.connect = function () {\r\n      this._ppr.connect();\r\n    };\r\n    PhotonIf.prototype.disconnect = function () {\r\n      this._ppr.disconnect();\r\n    };\r\n    //send data to server\r\n    PhotonIf.prototype.sendData = function (nCmdId, ...args) {\r\n      var op = [0, nCmdId];\r\n\r\n      for (var i = 0; i < args.length; ++i) {\r\n        op.push(i + 1, args[i]);\r\n      }\r\n      console.log('send cmd:'+op[0,1]);\r\n      this._ppr.sendOperation(1, op);\r\n    };\r\n\r\n    return PhotonIf;\r\n  })(); //class end\r\n  PhotonController.PhotonIf = PhotonIf;\r\n})(PhotonController || (PhotonController = {})); //namespace end\r\n\r\nmodule.exports = PhotonController;\r\n"]}