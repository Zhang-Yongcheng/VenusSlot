{"version":3,"sources":["assets\\scripts\\requestGameResult.js"],"names":["getNodeBoundingBox","node","parent","_updateWorldMatrix","width","_contentSize","height","rect","cc","_anchorPoint","x","y","_calculWorldMatrix","transformMat4","_worldMatrix","requestGameResult","coGroup","co","CoroutineGroup","priority","NormalPriority","updateResult","k","symbolDataList","store","iGrid","gameResult","i","length","j","symbolIndex","setRedist","cols","name","value","childrenCount","col","getChildByName","find","gameResultGotStatus","type","gameServer","GetPI","sendData","currentBet","getComponent","Label","string","userPoints","start","colIndex","colsBox","byeond","intersects","children","waitUntil","playing","t","t1","t2"],"mappings":"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","sourceRoot":"/","sourcesContent":["import co from './co.cc';\r\nimport { setSymbol } from './buildSymbols';\r\n\r\nfunction getNodeBoundingBox(node) {\r\n  node.parent._updateWorldMatrix();\r\n\r\n  let width = node._contentSize.width;\r\n  let height = node._contentSize.height;\r\n  let rect = cc.rect(-node._anchorPoint.x * width, -node._anchorPoint.y * height, width, height);\r\n\r\n  node._calculWorldMatrix();\r\n  rect.transformMat4(rect, node._worldMatrix);\r\n  return rect;\r\n}\r\n\r\nconst requestGameResult = (function () {\r\n  const coGroup = co.CoroutineGroup('RequestGameResult', { priority: co.CoroutineGroup.NormalPriority + 1 });\r\n\r\n  function updateResult(k) {\r\n    const { symbolDataList } = cc.store;\r\n    const { iGrid } = cc.store.gameResult;\r\n    for (let i = 0; i < symbolDataList.length; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        const symbolIndex = iGrid[i + 5 * j];\r\n        symbolDataList[i][k - j] = symbolIndex;\r\n        setSymbol(i, k - j, symbolIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setRedist(cols, name, value) {\r\n    for (let i = 0; i < cols.childrenCount; i++) {\r\n      const col = cols.getChildByName(`${i + 1}`);\r\n      col[name] = value;\r\n    }\r\n  }\r\n\r\n  return function requestGameResult() {\r\n    const cols = cc.find('Canvas/Game/Machine/Performance/Cols');\r\n\r\n    setRedist(cols, 'redist', 0);\r\n    setRedist(cols, 'redist2', 0);\r\n\r\n    // coGroup.start(function* () {\r\n    //   const colIndex = 0;\r\n    //   const col = cols.getChildByName(`${colIndex + 1}`);\r\n    //   const colsBox = getNodeBoundingBox(cols);\r\n\r\n    //   while (true) {\r\n    //     // const seconds = 1 + Math.floor( Math.random() * 5 );\r\n    //     // yield co.waitForSeconds(seconds);\r\n\r\n    //     const symbolBox = getNodeBoundingBox(col.children[col.childrenCount - 3]);\r\n    //     if (colsBox.intersects(symbolBox) === true) {\r\n    //       while (true) {\r\n    //         const symbolBox = getNodeBoundingBox(col.children[3]);\r\n    //         if (colsBox.intersects(symbolBox) === true) {\r\n    //           break;\r\n    //         }\r\n    //         yield;\r\n    //       }\r\n\r\n    //       const iGrid = new Array(15);\r\n    //       const iLine = new Array(9);\r\n    //       const iFrame = new Array(9);\r\n    //       const WinPointLine = new Array(9);\r\n    //       const WinTotalPoint = 0;\r\n\r\n    //       for (let i = 0; i < 9; i++) {\r\n    //         // iLine[i] = Math.random() > 0.85 ? 1 : 0;\r\n    //         iLine[i] = 0;\r\n    //         iFrame[i] = 3 + Math.floor(Math.random() * 3);\r\n    //       }\r\n\r\n    //       for (let i = 0; i < 15; i++) {\r\n    //         iGrid[i] = Math.floor(Math.random() * 11);\r\n    //       }\r\n\r\n    //       cc.store.gameResult = { iGrid, iLine, iFrame, WinPointLine, WinTotalPoint };\r\n\r\n    //       cc.store.gameResultGotStatus = 2;\r\n    //       break;\r\n    //     }\r\n    //     yield;\r\n    //   }\r\n    // });\r\n\r\n    cc.store.gameResultGotStatus = 1;\r\n\r\n    //const {type} = cc.store.gameResult;\r\n    if(cc.store.type==0){\r\n      cc.store?.gameServer.GetPI().sendData(3162, cc.store.currentBet);\r\n      \r\n    }else{\r\n      cc.store?.gameServer.GetPI().sendData(3162, 0);\r\n    }\r\n    cc.find('Canvas/Game/Machine/UI/GamePoint/Value').getComponent(cc.Label).string=cc.store.userPoints-cc.store.currentBet;\r\n    //console.log(3162);\r\n\r\n    coGroup.start(function* () {\r\n      const colIndex = 0;\r\n      const col = cols.getChildByName(`${colIndex + 1}`);\r\n      const colsBox = getNodeBoundingBox(cols);\r\n      let byeond = false;\r\n\r\n      while (true) {\r\n        if (cc.store.gameResultGotStatus === 2) {\r\n          if (colsBox.intersects(getNodeBoundingBox(col.children[col.childrenCount - 3])) === true) {\r\n            updateResult(5);\r\n            setRedist(cols, 'redist', 3);\r\n\r\n            cc.store.gameResultGotStatus = 3;\r\n\r\n            yield co.waitUntil(() => colsBox.intersects(getNodeBoundingBox(col.children[3])) === true);\r\n          } else if (byeond === true || cc.store.playing === false) {\r\n            let t = col.childrenCount - 4;\r\n            while (colsBox.intersects(getNodeBoundingBox(col.children[--t])) !== true);\r\n\r\n            const t1 = t + 3;\r\n            updateResult(t1);\r\n            const t2 = t1 - 2;\r\n            setRedist(cols, 'redist2', t2);\r\n\r\n            cc.store.gameResultGotStatus = 3;\r\n\r\n            yield co.waitUntil(() => colsBox.intersects(getNodeBoundingBox(col.children[t2])) === true);\r\n          } else {\r\n            cc.store.gameResultGotStatus = 3;\r\n          }\r\n          updateResult(cc.store.symbolDataList[colIndex].length - 1);\r\n          break;\r\n        } else {\r\n          if (byeond === false) {\r\n            byeond = colsBox.intersects(getNodeBoundingBox(col.children[col.childrenCount - 3]));\r\n          }\r\n        }\r\n        yield;\r\n      }\r\n    });\r\n  };\r\n})();\r\n\r\nexport default requestGameResult;\r\n"]}