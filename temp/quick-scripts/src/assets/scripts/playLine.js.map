{"version":3,"sources":["assets\\scripts\\playLine.js"],"names":["playLine","lineIndex","frameCnt","slideEffect","keepVisible","speed","duration","linesNode","cc","find","lineNode","getChildByName","active","x","width","co","start","t0","currentRuntime","lastTickTime","dt","dx","t1","effects","frames","lineFrames","i","push","waitForMilliseconds","forEach","effect","stop"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;mDAEyBA;;AAAV,SAAUA,QAAV,CAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,WAArD,EAAkEC,KAAlE,EAAyEC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,UAAAA,SADO,GACKC,EAAE,CAACC,IAAH,CAAQ,uCAAR,CADL;AAEPC,UAAAA,QAFO,GAEIH,SAAS,CAACI,cAAV,OAA4BV,SAAS,GAAG,CAAxC,EAFJ;AAGbS,UAAAA,QAAQ,CAACE,MAAT,GAAkB,IAAlB;;AAHa,gBAKTT,WAAW,KAAK,IALP;AAAA;AAAA;AAAA;;AAMXO,UAAAA,QAAQ,CAACG,CAAT,IAAcN,SAAS,CAACO,KAAxB;AANW;AAQX,iBAAMC,eAAGC,KAAH,uCAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,oBAAAA,EAFO,GAEFF,eAAGG,cAAH,CAAkBC,YAFhB;AAGPC,oBAAAA,EAHO,GAGF,CAHE;;AAAA;AAAA,yBAKJ,IALI;AAAA;AAAA;AAAA;;AAMHC,oBAAAA,EANG,GAMEhB,KAAK,GAAGe,EANV;AAOTV,oBAAAA,QAAQ,CAACG,CAAT,IAAcQ,EAAd;;AAPS,0BAQLX,QAAQ,CAACG,CAAT,IAAc,CART;AAAA;AAAA;AAAA;;AASPH,oBAAAA,QAAQ,CAACG,CAAT,GAAa,CAAb;AATO;;AAAA;AAAA;AAaT;;AAbS;AAeHS,oBAAAA,EAfG,GAeEP,eAAGG,cAAH,CAAkBC,YAfpB;AAgBTC,oBAAAA,EAAE,GAAGE,EAAE,GAAGL,EAAV;AACAA,oBAAAA,EAAE,GAAGK,EAAL;AAjBS;AAAA;;AAAA;AAAA;AAoBXZ,oBAAAA,QAAQ,CAACG,CAAT,GAAa,CAAb;AApBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAT,EAAN;;AARW;AAAA;AAkCLU,UAAAA,OAlCK,GAkCK,EAlCL;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoCHC,oBAAAA,MApCG,GAoCMC,uBAAWxB,SAAS,GAAG,CAAvB,CApCN;;AAAA,2CAqCAyB,CArCA;AAsCPH,sBAAAA,OAAO,CAACI,IAAR,CACEZ,eAAGC,KAAH,uCAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,uCAAM,4BAAW,iCAAgBQ,MAAM,CAACE,CAAD,CAAtB,CAAX,EAAuC,IAAvC,CAAN;;AADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAT,EADF;AAtCO;;AAqCT,yBAASA,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGxB,QAApB,EAA8BwB,CAAC,EAA/B,EAAmC;AAAA,4BAA1BA,CAA0B;AAMlC;;AA3CQ;AA4CT,2BAAMX,eAAGa,mBAAH,CAAuBtB,QAAvB,CAAN;;AA5CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8CTiB,UAAAA,OAAO,CAACM,OAAR,CAAgB,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,WAAtB;AA9CS;;AAAA;AAAA;;AAiDX,cAAI3B,WAAW,KAAK,KAApB,EAA2B;AACzBM,YAAAA,QAAQ,CAACE,MAAT,GAAkB,KAAlB;AACD;;AAnDU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourceRoot":"/","sourcesContent":["import co from './co.cc';\r\nimport getSymbolAnchor from './getSymbolAnchor';\r\nimport lineFrames from './lineFrames';\r\nimport playEffect from './playEffect';\r\n\r\nexport default function* playLine(lineIndex, frameCnt, slideEffect, keepVisible, speed, duration) {\r\n  const linesNode = cc.find('Canvas/Game/Machine/Performance/Lines');\r\n  const lineNode = linesNode.getChildByName(`${lineIndex + 1}`);\r\n  lineNode.active = true;\r\n\r\n  if (slideEffect === true) {\r\n    lineNode.x -= linesNode.width;\r\n\r\n    yield co.start(function* () {\r\n      try {\r\n        let t0 = co.currentRuntime.lastTickTime;\r\n        let dt = 0;\r\n\r\n        while (true) {\r\n          const dx = speed * dt;\r\n          lineNode.x += dx;\r\n          if (lineNode.x >= 0) {\r\n            lineNode.x = 0;\r\n            break;\r\n          }\r\n\r\n          yield;\r\n\r\n          const t1 = co.currentRuntime.lastTickTime;\r\n          dt = t1 - t0;\r\n          t0 = t1;\r\n        }\r\n      } finally {\r\n        lineNode.x = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  try {\r\n    const effects = [];\r\n    try {\r\n      const frames = lineFrames[lineIndex + 1];\r\n      for (let i = 0; i < frameCnt; i++) {\r\n        effects.push(\r\n          co.start(function* () {\r\n            yield playEffect(getSymbolAnchor(frames[i]), 2000);\r\n          })\r\n        );\r\n      }\r\n      yield co.waitForMilliseconds(duration);\r\n    } finally {\r\n      effects.forEach(effect => effect.stop());\r\n    }\r\n  } finally {\r\n    if (keepVisible === false) {\r\n      lineNode.active = false;\r\n    }\r\n  }\r\n}\r\n"]}