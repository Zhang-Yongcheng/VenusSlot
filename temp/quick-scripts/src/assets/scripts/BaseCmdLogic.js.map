{"version":3,"sources":["assets\\scripts\\BaseCmdLogic.js"],"names":["require","Observable","Photon","PhotonController","PublicSetUp","BaseCmdLogic","observable","MainSrvCmdLogic","pi","_pi","_lbSrvObj","_account","_password","prototype","RunLogin","account","password","type","_type","InitCallbackFunction","PeerStatusCallback","ResponseCallback","EventCallback","connect","SetLbSrvCmdLogicObj","lbSrvCmdLogicObj","st","selfObj","PhotonPeer","StatusCodes","sendData","vals","console","log","ConnectToServer","LobbySrvCmdLogic","gameid","versioncode","_gameid","_versioncode","_loginId","_loginKey","_gameSrvObj","_protocolType","loginId","loginKey","protocolType","ip","port","PhotonIf","ConnectionProtocol","Ws","Wss","SetGameSrvCmdLogicObj","gameSrvCmdLogicObj","GameSrvBaseCmdLogic","GameObj","_GameCmdFuncObj","_GameObj","SetGameCmdFunc","FuncObj","GetPI","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["const { Observable } = require('./observable.cc');\r\nconst Photon = require('./Photon-Javascript_SDK');\r\nconst PhotonController = require('./Photon_Interface');\r\nlet PublicSetUp=require('PublicSetUp');\r\n/**\r\n@namespace BaseCmdLogic\r\n處理登入、入局等底層訊息用\r\n*/\r\n// prevent globals renaming by closure compilier\r\nvar BaseCmdLogic;\r\n\r\n(function (BaseCmdLogic) {\r\n  const observable = Observable();\r\n  /** \r\n    * \r\n    @class MainSrvCmdLogic\r\n    */\r\n  var MainSrvCmdLogic = (function () {\r\n    /** \r\n        @constructor\r\n        @param {PhotonController.PhotonIf} pi photon interface\r\n        */\r\n    function MainSrvCmdLogic(pi) {\r\n      this._pi = pi;\r\n      this._lbSrvObj = null;\r\n      this._account = '';\r\n      this._password = '';\r\n    } //constructor function end\r\n\r\n    //login\r\n    MainSrvCmdLogic.prototype.RunLogin = function (account, password,type) {\r\n      this._account = account;\r\n      this._password = password;\r\n      this._type = type;\r\n      this._pi.InitCallbackFunction(this, this.PeerStatusCallback, this.ResponseCallback, this.EventCallback);\r\n      this._pi.connect(); //對main server做連線\r\n    };\r\n\r\n    //set lobby server command logic\r\n    MainSrvCmdLogic.prototype.SetLbSrvCmdLogicObj = function (lbSrvCmdLogicObj) {\r\n      this._lbSrvObj = lbSrvCmdLogicObj;\r\n    };\r\n\r\n    //photon peer status callback function\r\n    MainSrvCmdLogic.prototype.PeerStatusCallback = function (st, selfObj) {\r\n      switch (st) {\r\n        case Photon.PhotonPeer.StatusCodes.connect: //已經連上 main server\r\n          selfObj._pi.sendData(101, selfObj._account, selfObj._password, selfObj._type, 0, '', 999); //送出帳密\r\n          break;\r\n      }\r\n    };\r\n\r\n    //photon peer reponse callback function\r\n    MainSrvCmdLogic.prototype.ResponseCallback = function (vals, selfObj) {\r\n      switch (vals[0]) {\r\n        case 101: //server端登入回傳訊息\r\n          if (vals[1] == 1) {\r\n            //成功\r\n            //直接等server通知 lobby server 資訊再做連線\r\n\r\n          } else {\r\n            switch (\r\n              vals[1] //（0：失敗, 2：版本錯誤, 3：維護中, 4:重複登入, 5:之前遊戲局尚未結束 6：沒有進行遊戲的權限（洽客服））\r\n            ) {\r\n              case 0:\r\n                console.log('登入Main Srv失敗');\r\n                break;\r\n              case 2:\r\n                console.log('登入Main Srv版本錯誤');\r\n                break;\r\n              case 3:\r\n                console.log('Main Srv維護中');\r\n                break;\r\n              case 4:\r\n                console.log('Main Srv重複登入');\r\n                break;\r\n              case 5:\r\n                console.log('之前遊戲局尚未結束');\r\n                break;\r\n              case 6:\r\n                console.log('沒有進行遊戲的權限');\r\n                break;\r\n            }\r\n\r\n          }\r\n          break;\r\n      }\r\n      //console.log(\"ms response:\"+vals);\r\n    };\r\n\r\n    //photon peer event callback function\r\n    MainSrvCmdLogic.prototype.EventCallback = function (vals, selfObj) {\r\n      switch (vals[0]) {\r\n        case 102: //由 main server通知的 lobby server 資訊\r\n          //vals[1]:loginID\r\n          //vals[2]:loginKey\r\n          //vals[3]:protocol(0:Unknown 1:Udp 2:Tcp 3:WebSocket 4:Http 5:SecureWebSocket)\r\n          //vals[4]:ip\r\n          //vals[5]:port\r\n          selfObj._lbSrvObj.ConnectToServer(vals[1], vals[2], vals[3], vals[4], vals[5]);\r\n          break;\r\n      }\r\n      //console.log(\"ms event:\"+evt);\r\n    };\r\n\r\n    return MainSrvCmdLogic;\r\n  })(); //class end\r\n  BaseCmdLogic.MainSrvCmdLogic = MainSrvCmdLogic;\r\n\r\n  /** \r\n    * \r\n    @class LobbySrvCmdLogic\r\n    */\r\n  var LobbySrvCmdLogic = (function () {\r\n    /** \r\n        @constructor\r\n        */\r\n    function LobbySrvCmdLogic(gameid, versioncode) {\r\n      this._pi = null;\r\n      this._gameid = gameid;\r\n      this._versioncode = versioncode;\r\n      this._loginId = 0;\r\n      this._loginKey = 0;\r\n      this._gameSrvObj = null;\r\n      this._protocolType = 0;\r\n    } //constructor function end\r\n\r\n    //connect to lobby server\r\n    LobbySrvCmdLogic.prototype.ConnectToServer = function (loginId, loginKey, protocolType, ip, port) {\r\n      this._loginId = loginId;\r\n      this._loginKey = loginKey;\r\n      this._protocolType = protocolType;\r\n      //目前只會有 WebSocket 或 SecureWebSocket 兩種 protocol\r\n      if (protocolType == 3) {\r\n        //WebSocket\r\n        this._pi = new PhotonController.PhotonIf(Photon.ConnectionProtocol.Ws, ip + ':' + port);\r\n      } else if (protocolType == 5) {\r\n        //SecureWebSocket\r\n        this._pi = new PhotonController.PhotonIf(Photon.ConnectionProtocol.Wss, ip + ':' + port);\r\n      }\r\n      if (this._pi != null) {\r\n        //設定 Photon Interface 物件的 Callback Function\r\n        this._pi.InitCallbackFunction(this, this.PeerStatusCallback, this.ResponseCallback, this.EventCallback);\r\n        this._pi.connect();\r\n      }\r\n    };\r\n\r\n    //set game server command logic\r\n    LobbySrvCmdLogic.prototype.SetGameSrvCmdLogicObj = function (gameSrvCmdLogicObj) {\r\n      this._gameSrvObj = gameSrvCmdLogicObj;\r\n    };\r\n\r\n    //photon peer status callback function\r\n    LobbySrvCmdLogic.prototype.PeerStatusCallback = function (st, selfObj) {\r\n      switch (st) {\r\n        case Photon.PhotonPeer.StatusCodes.connect: //已經連上 lobby server\r\n          selfObj._pi.sendData(101, selfObj._loginId, selfObj._loginKey); //送出login id 與 key\r\n          break;\r\n      }\r\n    };\r\n\r\n    //photon peer reponse callback function\r\n    LobbySrvCmdLogic.prototype.ResponseCallback = function (vals, selfObj) {\r\n      switch (vals[0]) {\r\n        case 102: //登入狀態回覆\r\n          if (vals[1] == 1) {\r\n            ////狀態代碼（0：失敗, 1：成功, 2：版本錯誤, 3：維護中）\r\n            //加入遊戲局（this._gameid）\r\n            selfObj._pi.sendData(103, selfObj._gameid, -1, -1, selfObj._versioncode);\r\n\r\n          } else {\r\n            switch (vals[1]) {\r\n              case 0:\r\n                console.log('登入LB Srv 失敗');\r\n                break;\r\n              case 2:\r\n                console.log('登入LB Srv版本錯誤');\r\n                break;\r\n              case 3:\r\n                console.log('LB Srv 維護中');\r\n                break;\r\n            }\r\n\r\n          }\r\n          break;\r\n\r\n        case 103: //server送回的game server連線資訊\r\n          //vals[1]:loginID\r\n          //vals[2]:loginKey\r\n          //vals[3]:ip\r\n          //vals[4]:port\r\n          //vals[5]:result\r\n          if (vals[5] == 1) {\r\n            selfObj._gameSrvObj.ConnectToServer(vals[1], vals[2], selfObj._protocolType, vals[3], vals[4]);\r\n\r\n          } else {\r\n            switch (\r\n              vals[5] //0：錯誤 1：成功 2:遊戲維護中 3:版本錯誤\r\n            ) {\r\n              case 0:\r\n                console.log('加入game server遊戲局錯誤');\r\n                break;\r\n              case 2:\r\n                console.log('Game Srv 遊戲維護中');\r\n                break;\r\n              case 3:\r\n                console.log('要求加入Game Srv 版本錯誤');\r\n                break;\r\n            }\r\n\r\n          }\r\n          break;\r\n\r\n        case 104: //加入game server遊戲局結果回覆(因為可能會被game server強制斷線，所以由lobby server進行回覆)\r\n          if (vals[1] != 1) {\r\n            //-1：建立房間失敗 0：錯誤 1:成功 2：點數不足 3：沒有進行遊戲的權限（洽客服） ], 4：無可用房間, 5：此玩家之前遊戲局未結束\r\n            switch (vals[1]) {\r\n              case -1:\r\n                console.log('建立房間失敗');\r\n                break;\r\n              case 0:\r\n                console.log('加入遊戲錯誤');\r\n                break;\r\n              case 2:\r\n                console.log('點數不足');\r\n                break;\r\n              case 3:\r\n                console.log('沒有進行遊戲的權限');\r\n                break;\r\n              case 4:\r\n                console.log('無可用房間');\r\n                break;\r\n              case 5:\r\n                console.log('此玩家之前遊戲局未結束');\r\n                break;\r\n            }\r\n\r\n          }\r\n          break;\r\n      }\r\n      console.log('ls response, cmd:' + vals[0]);\r\n    };\r\n\r\n    //photon peer event callback function\r\n    LobbySrvCmdLogic.prototype.EventCallback = function (vals, selfObj) {\r\n      console.log('ls event, cmd:' + vals[0]);\r\n    };\r\n\r\n    return LobbySrvCmdLogic;\r\n  })(); //class end\r\n  BaseCmdLogic.LobbySrvCmdLogic = LobbySrvCmdLogic;\r\n\r\n  /** \r\n    * \r\n    @class GameSrvBaseCmdLogic\r\n    */\r\n  var GameSrvBaseCmdLogic = (function () {\r\n    /** \r\n        @constructor\r\n        */\r\n    function GameSrvBaseCmdLogic(GameObj) {\r\n      this._pi = null;\r\n      this._GameCmdFuncObj = null;\r\n      this._loginId = 0;\r\n      this._loginKey = 0;\r\n      this._GameObj = GameObj;\r\n    } //constructor function end\r\n\r\n    //connect to game server\r\n    GameSrvBaseCmdLogic.prototype.ConnectToServer = function (loginId, loginKey, protocolType, ip, port) {\r\n      console.log('connect to gs loginId:' + loginId + ', loginKey:' + loginKey + ', protocolType:' + protocolType + ', ip:' + ip + ', port:' + port);\r\n      this._loginId = loginId;\r\n      this._loginKey = loginKey;\r\n      //目前只會有 WebSocket 或 SecureWebSocket 兩種 protocol\r\n      if (protocolType == 3) {\r\n        //WebSocket\r\n        this._pi = new PhotonController.PhotonIf(Photon.ConnectionProtocol.Ws, ip + ':' + port);\r\n      } else if (protocolType == 5) {\r\n        //SecureWebSocket\r\n        this._pi = new PhotonController.PhotonIf(Photon.ConnectionProtocol.Wss, ip + ':' + port);\r\n      }\r\n      if (this._pi != null) {\r\n        //設定 Photon Interface 物件的 Callback Function\r\n        this._pi.InitCallbackFunction(this, this.PeerStatusCallback, this.ResponseCallback, this.EventCallback);\r\n        this._pi.connect();\r\n      }\r\n    };\r\n\r\n    //photon peer status callback function\r\n    GameSrvBaseCmdLogic.prototype.PeerStatusCallback = function (st, selfObj) {\r\n      switch (st) {\r\n        case Photon.PhotonPeer.StatusCodes.connect: //已經連上 game server\r\n          selfObj._pi.sendData(101, selfObj._loginId, selfObj._loginKey); //送出login id 與 key\r\n          break;\r\n      }\r\n    };\r\n\r\n    //photon peer reponse callback function\r\n    GameSrvBaseCmdLogic.prototype.ResponseCallback = function (vals, selfObj) {\r\n      console.log('gs response, cmd:' + vals[0]);\r\n      switch (vals[0]) {\r\n        case 111: //收到game遊戲局已經準備完成的訊息（只會有一次）\r\n          selfObj._pi.sendData(3161); //送出3161，取得本桌的資訊(通知server前端遊戲已經準備就緒)\r\n          //押注為3162\r\n          break;\r\n\r\n        // case 3072: //　回傳本桌的資訊\r\n        //   break;\r\n\r\n        // case 3073: //　回傳押注結果資訊\r\n        //   break;\r\n\r\n        // case 3074: //　通知遊戲端免費遊戲結束\r\n        //   break;\r\n\r\n        default:\r\n          selfObj._GameCmdFuncObj(vals, selfObj._pi, selfObj._GameObj);\r\n          break;\r\n      }\r\n    };\r\n    //photon peer event callback function\r\n    GameSrvBaseCmdLogic.prototype.EventCallback = function (vals, selfObj) {\r\n      console.log('gs event, cmd:' + vals[0]);\r\n    };\r\n\r\n    //set game cmd function\r\n    GameSrvBaseCmdLogic.prototype.SetGameCmdFunc = function (FuncObj) {\r\n      this._GameCmdFuncObj = FuncObj;\r\n    };\r\n\r\n    //Get Photon Interface object\r\n    GameSrvBaseCmdLogic.prototype.GetPI = function () {\r\n      return this._pi;\r\n    };\r\n\r\n    return GameSrvBaseCmdLogic;\r\n  })(); //class end\r\n  BaseCmdLogic.GameSrvBaseCmdLogic = GameSrvBaseCmdLogic;\r\n})(BaseCmdLogic || (BaseCmdLogic = {})); //namespace end\r\n\r\nmodule.exports = BaseCmdLogic;\r\n\r\n/*\r\n    //優先處理底層server event，未處理的封包會透過 default 傳給外部物件\r\n    PhotonIf.prototype.BaseEventCallback = function(vals, outObj){\r\n        console.log(\"BaseEventCallback\");\r\n        switch(vals[0]){\r\n            case 102:\r\n                break;\r\n            default:\r\n                this._outEventCallback(vals, outObj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //處理 main server的封包訊息\r\n    PhotonIf.prototype.ProcMainSrvResponse = function(vals, outObj){\r\n        console.log(\"ProcMainSrvResponse, cmd id:\"+vals[0]);\r\n        switch(vals[0]){\r\n            case 101:\r\n                //console.log(\"vals 1:\"+vals[1]);\r\n                break;\r\n            default:\r\n                this._outRspCallback(vals, outObj);\r\n                break;\r\n        }\r\n    };\r\n\r\n    //處理 lobby server的封包訊息\r\n    PhotonIf.prototype.ProcLobbySrvResponse = function(vals, outObj){\r\n        console.log(\"ProcLobbySrvResponse, cmd id:\"+vals[0]);\r\n        switch(vals[0]){\r\n            case 101:\r\n                //console.log(\"vals 1:\"+vals[1]);\r\n                break;\r\n            default:\r\n                this._outRspCallback(vals, outObj);\r\n                break;\r\n        }\r\n    };\r\n\r\n    //處理 game server的封包訊息\r\n    PhotonIf.prototype.ProcGameSrvResponse = function(vals, outObj){\r\n        console.log(\"ProcGameSrvResponse, cmd id:\"+vals[0]);\r\n        switch(vals[0]){\r\n            case 101:\r\n                //console.log(\"vals 1:\"+vals[1]);\r\n                break;\r\n            default:\r\n                this._outRspCallback(vals, outObj);\r\n                break;\r\n        }\r\n    };\r\n*/\r\n"]}